---

- hosts: all
  become: True
  gather_facts: False
  tasks:
    - name: 'test | install dependencies with apk'
      raw: 'apk add -U python3 && apk add -U kodi-inputstream-adaptive --repository=https://dl-cdn.alpinelinux.org/alpine/edge/testing/'
      ignore_errors: True
      tags: always

    - name: 'test | install python with pacman'
      # https://wiki.archlinux.org/title/Pacman/Package_signing#Upgrade_system_regularly
      # NOTE that `kodi-inputstream-adaptive` does not ship with the base Kodi
      # package, so we have to install `kodi-addon-inputstream-adaptive`.
      raw: 'pacman --noconfirm -Sy archlinux-keyring && pacman --noconfirm -Su && pacman --noconfirm -S python kodi-addon-inputstream-adaptive'
      ignore_errors: True
      tags: always

    - name: 'test | install python and other dependencies with apt'
      # NOTE that `kodi-inputstream-adaptive` does not ship with the base Kodi
      # package, so we have to install `kodi-inputstream-adaptive`.
      # Re `acl`: https://github.com/ansible/ansible/issues/74830#issuecomment-848817825
      raw: |
        export DEBIAN_FRONTEND=noninteractive
        echo 'tzdata tzdata/Areas select Europe' | debconf-set-selections || exit
        echo 'tzdata tzdata/Zones/Europe select Bratislava' | debconf-set-selections || exit
        if command -v mediacenter 1>/dev/null 2>&1; then
          apt -y update && { apt -y install --no-install-recommends python3 || apt -y install --no-install-recommends python; };
        else
          apt -y update && { apt -y install --no-install-recommends python3 kodi-inputstream-adaptive || apt -y install python kodi-inputstream-adaptive; };
        fi
      ignore_errors: True
      tags: always

- hosts: all
  become: True
  vars:
    # Define this structure here, rather than in the `role` application stanza,
    # so that we can extend it with the LibreELEC repository for LibreELEC
    # hosts only.
    kodi_repositories:
      - 'official_cached=https://mirrors.kodi.tv/addons/{{ (ansible_distribution == "Ubuntu") | ternary("matrix", "nexus") }}/addons.xml.gz'
      - 'jellyfin_cached=https://repo.jellyfin.org/releases/client/kodi/addons.xml'
      - 'sandmann79_cached=https://raw.githubusercontent.com/Sandmann79/xbmc/master/packages/addons.xml'
      - 'sandmann79_py3_cached=https://raw.githubusercontent.com/Sandmann79/xbmc/master/packages-py3/addons.xml'
  pre_tasks:
    # The LibreELEC repository used to appear statically in the main
    # `kodi_repositories` definition, but LibreELEC does aggressive
    # rate-limiting on their repository, causing this playbook to fail from
    # connection and/or HTTP errors.
    #
    # Reference for LibreELEC repository rate-limiting:
    # https://forum.libreelec.tv/thread/26597-add-on-repository-problems-2024-03/?pageNo=1
    #
    # Note that LibreELEC appears to namespace addons under the path
    # `<LibreELEC-major-version>.0.0`; for instance, the addon repository URL
    # for LibreELEC release 11.0.6 is `https://addons.libreelec.tv/11.0.0/`.
    - name: 'test | add LibreELEC repository for LibreELEC hosts'
      set_fact:
        kodi_repositories: '{{
          kodi_repositories + [("libreelec_cached=https://addons.libreelec.tv/" ~ ansible_distribution_major_version ~ ".0.0/Generic/x86_64/addons.xml.gz")]
        }}'
      when: 'ansible_distribution == "LibreELEC"'
  roles:
    - role: "{{ playbook_dir | dirname }}"
      vars:
        kodi_attempt_start: True
        kodi_groups:
          - audio
          - video
          - input
          - name: custom-group-for-testing
            system: False
            gid: 12345
        kodi_language: 'en_US'
        kodi_locale_country: 'United States'
        kodi_locale_timezone_country: 'United States'
        kodi_subtitles_languages: English
        kodi_addons:
          - repository.sandmann79.plugins
          - repository.sandmann79-py3.plugins
          - 'repository.jellyfin.kodi=https://repo.jellyfin.org/releases/client/kodi/repository.jellyfin.kodi.zip'
          - plugin.video.youtube
          - plugin.video.amazon-test
          - plugin.video.jellyfin
          - script.module.amazoncaptcha
          - plugin.video.amazon-test
        kodi_config:
          - file: 'userdata/guisettings.xml'
            key: 'settings/setting[@id="input.libinputkeyboardlayout"]'
            value: 'us'
            type: string
          - file: 'userdata/guisettings.xml'
            key: 'settings/setting[@id="locale.activekeyboardlayout"]'
            value: 'English QWERTY'
            type: string
          - file: 'userdata/guisettings.xml'
            key: 'settings/setting[@id="locale.audiolanguage"]'
            value: 'English'
            type: string
          - file: 'userdata/guisettings.xml'
            key: 'settings/setting[@id="locale.keyboardlayouts"]'
            value: 'English QWERTY'
            type: string
          - file: 'userdata/guisettings.xml'
            key: 'settings/setting[@id="locale.subtitlelanguage"]'
            value: '{{ kodi_subtitles_languages }}'
            type: string
          - file: 'userdata/guisettings.xml'
            key: 'settings/setting[@id="subtitles.languages"]'
            value: 'English'
            type: string
